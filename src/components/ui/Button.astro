---
import { cn } from '../../lib/utils.ts';

interface Props {
  variant?: 'default' | 'destructive' | 'outline' | 'secondary' | 'ghost' | 'link';
  size?: 'default' | 'sm' | 'lg' | 'icon';
  class?: string;
  href?: string;
}

const {
  variant = 'default',
  size = 'default',
  class: className,
  href,
  ...props
} = Astro.props;

const baseClasses = "inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50";

const variants = {
  default: "bg-gradient-to-r from-purple-600 to-blue-600 text-white hover:from-purple-700 hover:to-blue-700",
  destructive: "bg-red-500 text-white hover:bg-red-600",
  outline: "border border-white/20 bg-transparent text-white hover:bg-white/10",
  secondary: "bg-slate-700/50 text-gray-300 hover:bg-slate-700/70",
  ghost: "text-white hover:bg-white/10",
  link: "text-purple-400 underline-offset-4 hover:underline",
};

const sizes = {
  default: "h-10 px-4 py-2",
  sm: "h-9 rounded-md px-3",
  lg: "h-11 rounded-md px-8",
  icon: "h-10 w-10",
};

const classes = cn(
  baseClasses,
  variants[variant],
  sizes[size],
  className
);

if (href) {
  props.href = href;
}
---

<a class={classes} {...props}>
  <slot />
</a>
