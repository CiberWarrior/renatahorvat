---
import '../styles/global.css';
import SpeedInsights from '@vercel/speed-insights/astro';

interface Props {
  title?: string;
  description?: string;
  keywords?: string;
  canonical?: string;
  ogImage?: string;
  gaId?: string;
}

const {
  title = "Renata Horvat — Designer who speaks the language of science | Instructional Design & E-learning",
  description = "TURNING KNOWLEDGE INTO VISUAL EXPERIENCES. I combine design with deep understanding of science and education. Instructional design, e-learning, online textbooks, and e-book creation. Dizajner koji pretvara znanje u vizualne priče - instrukski dizajn, e-učenje, online udžbenici.",
  keywords = "designer, digital creator, science communication, visual design, web design, educational design, infographics, scientific visualization, portfolio, Croatia, instructional design, e-learning design, online textbook creation, e-book design, course design, learning experience design, dizajner, grafički dizajn, web dizajn, digitalni dizajn, znanstvena komunikacija, infografike, vizualizacija podataka, portfolio dizajner, Hrvatska, Zagreb, edukacijski dizajn, dizajn za znanost, kreativni dizajn, brand dizajn, UI UX dizajn, instrukski dizajn, e-učenje dizajn, online udžbenici, e-knjige dizajn",
  canonical = Astro.url.href,
  ogImage = "/og-image.jpg",
  gaId = import.meta.env.PUBLIC_GA_ID || "G-XXXXXXXXXX"
} = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta name="keywords" content={keywords} />
    <meta name="author" content="Renata Horvat" />
    <meta name="robots" content="index, follow" />
    <link rel="canonical" href={canonical} />
    
    <!-- Performance -->
    <meta name="theme-color" content="#15293f" />
    <meta name="color-scheme" content="dark" />
    
    <!-- Favicon -->
    <link rel="icon" type="image/png" href="/images/icon.png" />
    <link rel="apple-touch-icon" href="/images/icon.png" />
    
    <!-- Sitemap -->
    <link rel="sitemap" type="application/xml" href="/sitemap.xml" />
    
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;800&family=Bungee&display=swap" rel="stylesheet">
    
    <!-- Resource Hints -->
    <link rel="dns-prefetch" href="//fonts.googleapis.com">
    <link rel="dns-prefetch" href="//fonts.gstatic.com">
    <link rel="preload" href="/images/renatahorvat.jpg" as="image" type="image/jpeg">
    <link rel="preload" href="/images/icon.png" as="image" type="image/png">
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonical} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={ogImage} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:site_name" content="Renata Horvat Portfolio" />
    <meta property="og:locale" content="en_US" />
    
    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:url" content={canonical} />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={ogImage} />
    <meta name="twitter:creator" content="@renatahorvat" />
    
    <!-- Additional SEO -->
    <meta name="geo.region" content="HR" />
    <meta name="geo.country" content="Croatia" />
    <meta name="language" content="English" />
    
    <!-- Local SEO - Enhanced -->
    <meta name="geo.region" content="HR-21" />
    <meta name="geo.placename" content="Zagreb" />
    <meta name="geo.position" content="45.8150;15.9819" />
    <meta name="ICBM" content="45.8150, 15.9819" />
    <meta name="geo.region" content="HR" />
    <meta name="geo.country" content="Croatia" />
    <meta name="language" content="English" />
    
    <!-- Google Search Console Verification -->
    <meta name="google-site-verification" content="T1_sOgmyD20gtjDzmLD" />
    
    
    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-CY6VB6BVJL"></script>
    <script>
      // @ts-ignore - Google Analytics global variables
      (window as any).dataLayer = (window as any).dataLayer || [];
      function gtag(...args: any[]){(window as any).dataLayer.push(args);}
      gtag('js', new Date());

      gtag('config', 'G-CY6VB6BVJL', {
        page_title: document.title,
        page_location: window.location.href,
        custom_map: {
          'custom_parameter_1': 'portfolio_visitor'
        }
      });

      // Track scroll depth - Optimized with throttling
      let maxScroll = 0;
      let scrollTimeout: ReturnType<typeof setTimeout> | null = null;
      window.addEventListener('scroll', function() {
        // Throttle scroll events for better performance
        if (scrollTimeout) return;
        
        scrollTimeout = setTimeout(() => {
          const scrollPercent = Math.round((window.scrollY / (document.body.scrollHeight - window.innerHeight)) * 100);
          if (scrollPercent > maxScroll && scrollPercent % 25 === 0) {
            maxScroll = scrollPercent;
            gtag('event', 'scroll_depth', {
              scroll_percentage: scrollPercent,
              page_title: document.title
            });
          }
          scrollTimeout = null;
        }, 100); // Throttle to 10fps max
      });

      // Track time on page
      let startTime = Date.now();
      window.addEventListener('beforeunload', function() {
        const timeOnPage = Math.round((Date.now() - startTime) / 1000);
        gtag('event', 'time_on_page', {
          time_seconds: timeOnPage,
          page_title: document.title
        });
      });
    </script>
    
    <!-- Structured Data - Enhanced -->
    <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "Person",
      "name": "Renata Horvat",
      "jobTitle": "Designer & Digital Creator",
      "description": "Designer who speaks the language of science. I transform complex ideas into intuitive, visually captivating experiences.",
      "url": "https://renatahorvat.com",
      "image": "https://renatahorvat.com/images/renatahorvat.jpg",
      "sameAs": [
        "https://linkedin.com/in/renatahorvat",
        "https://twitter.com/renatahorvat"
      ],
      "address": {
        "@type": "PostalAddress",
        "addressCountry": "HR",
        "addressRegion": "Croatia",
        "addressLocality": "Zagreb"
      },
      "geo": {
        "@type": "GeoCoordinates",
        "latitude": "45.8150",
        "longitude": "15.9819"
      },
      "knowsAbout": [
        "Visual Design",
        "Science Communication", 
        "Educational Design",
        "Web Design",
        "Infographics",
        "Scientific Visualization",
        "Instructional Design",
        "E-learning Design",
        "Online Textbook Creation",
        "E-book Design",
        "Course Design",
        "Learning Experience Design",
        "Grafički dizajn",
        "Znanstvena komunikacija",
        "Edukacijski dizajn",
        "Web dizajn",
        "Infografike",
        "Vizualizacija podataka",
        "Instrukski dizajn",
        "E-učenje dizajn",
        "Online udžbenici",
        "E-knjige dizajn"
      ],
      "offers": {
        "@type": "Service",
        "name": "Design Services | Dizajn usluge",
        "description": "Visual design and digital creation services for educational and scientific content. Instructional design, e-learning, online textbooks, and e-book creation. Grafički dizajn, instrukski dizajn, e-učenje, online udžbenici i e-knjige."
      }
    }
    </script>

    <!-- Website Structured Data -->
    <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "WebSite",
      "name": "Renata Horvat Portfolio",
      "url": "https://renatahorvat.com",
      "author": {
        "@type": "Person",
        "name": "Renata Horvat"
      },
      "potentialAction": {
        "@type": "SearchAction",
        "target": "https://renatahorvat.com/search?q={search_term_string}",
        "query-input": "required name=search_term_string"
      }
    }
    </script>

    <!-- Local Business Structured Data -->
    <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "LocalBusiness",
      "name": "Renata Horvat Design Services",
      "description": "Professional design services for academic and scientific content",
      "url": "https://renatahorvat.com",
      "email": "screatives.info@gmail.com",
      "address": {
        "@type": "PostalAddress",
        "addressLocality": "Zagreb",
        "addressCountry": "HR"
      },
      "geo": {
        "@type": "GeoCoordinates",
        "latitude": "45.8150",
        "longitude": "15.9819"
      },
      "openingHours": "Mo-Fr 09:00-17:00",
      "priceRange": "$$"
    }
    </script>
  </head>
  <body class="min-h-screen text-white antialiased" style="background-color: #15293f;">
    
    <slot />
    
    <!-- Scripts -->
    <script>
      // Native scroll with reveal animations only
      document.addEventListener('DOMContentLoaded', function() {
        // Reveal animations - Optimized for performance
        const observerOptions = {
          threshold: 0.1,
          rootMargin: '0px 0px -50px 0px'
        };

        const observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              // Use transform3d for GPU acceleration
              (entry.target as HTMLElement).style.opacity = '1';
              (entry.target as HTMLElement).style.transform = 'translate3d(0, 0, 0)';
              // Unobserve after animation to improve performance
              observer.unobserve(entry.target);
            }
          });
        }, observerOptions);

        // Observe all elements with reveal class
        document.querySelectorAll('.reveal').forEach(el => {
          const element = el as HTMLElement;
          element.style.opacity = '0';
          element.style.transform = 'translate3d(0, 30px, 0)'; // Use transform3d
          element.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
          element.style.willChange = 'opacity, transform'; // GPU acceleration hint
          observer.observe(el);
        });

        // Staggered reveal animations - Optimized for performance
        document.querySelectorAll('.reveal-stagger').forEach((container, index) => {
          const children = container.children;
          Array.from(children).forEach((child, childIndex) => {
            const childElement = child as HTMLElement;
            childElement.style.opacity = '0';
            childElement.style.transform = 'translate3d(0, 30px, 0)'; // Use transform3d
            childElement.style.transition = `opacity 0.6s ease ${childIndex * 0.1}s, transform 0.6s ease ${childIndex * 0.1}s`;
            childElement.style.willChange = 'opacity, transform'; // GPU acceleration hint
          });
          
          const staggerObserver = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
              if (entry.isIntersecting) {
                Array.from(entry.target.children).forEach(child => {
                  const childElement = child as HTMLElement;
                  childElement.style.opacity = '1';
                  childElement.style.transform = 'translate3d(0, 0, 0)'; // Use transform3d
                });
                // Unobserve after animation to improve performance
                staggerObserver.unobserve(entry.target);
              }
            });
          }, observerOptions);
          
          staggerObserver.observe(container);
        });
      });
    </script>
    
    <!-- Vercel Speed Insights -->
    <SpeedInsights />
  </body>
</html>
