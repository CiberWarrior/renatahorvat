---
import '../styles/global.css';

interface Props {
  title?: string;
  description?: string;
  keywords?: string;
  canonical?: string;
  ogImage?: string;
  gaId?: string;
}

const {
  title = "Renata Horvat — Designer who speaks the language of science | Instructional Design & E-learning",
  description = "TURNING KNOWLEDGE INTO VISUAL EXPERIENCES. I combine design with deep understanding of science and education. Instructional design, e-learning, online textbooks, and e-book creation. Dizajner koji pretvara znanje u vizualne priče - instrukski dizajn, e-učenje, online udžbenici.",
  keywords = "designer, digital creator, science communication, visual design, web design, educational design, infographics, scientific visualization, portfolio, Croatia, instructional design, e-learning design, online textbook creation, e-book design, course design, learning experience design, dizajner, grafički dizajn, web dizajn, digitalni dizajn, znanstvena komunikacija, infografike, vizualizacija podataka, portfolio dizajner, Hrvatska, Zagreb, edukacijski dizajn, dizajn za znanost, kreativni dizajn, brand dizajn, UI UX dizajn, instrukski dizajn, e-učenje dizajn, online udžbenici, e-knjige dizajn",
  canonical = Astro.url.href,
  ogImage = "/og-image.jpg",
  gaId = import.meta.env.PUBLIC_GA_ID || "G-XXXXXXXXXX"
} = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta name="keywords" content={keywords} />
    <meta name="author" content="Renata Horvat" />
    <meta name="robots" content="index, follow" />
    <link rel="canonical" href={canonical} />
    
    <!-- Performance -->
    <meta name="theme-color" content="#15293f" />
    <meta name="color-scheme" content="dark" />
    
    <!-- Favicon -->
    <link rel="icon" type="image/png" href="/images/icon.png" />
    <link rel="apple-touch-icon" href="/images/icon.png" />
    
    <!-- Sitemap -->
    <link rel="sitemap" type="application/xml" href="/sitemap.xml" />
    
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;800&family=Bungee&display=swap" rel="stylesheet">
    
    <!-- Resource Hints -->
    <link rel="dns-prefetch" href="//fonts.googleapis.com">
    <link rel="dns-prefetch" href="//fonts.gstatic.com">
    <link rel="preload" href="/images/renatahorvat.jpg" as="image" type="image/jpeg">
    <link rel="preload" href="/images/icon.png" as="image" type="image/png">
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonical} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={ogImage} />
    <meta property="og:image:width" content="1200" />
    <meta property="og:image:height" content="630" />
    <meta property="og:site_name" content="Renata Horvat Portfolio" />
    <meta property="og:locale" content="en_US" />
    
    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:url" content={canonical} />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={ogImage} />
    <meta name="twitter:creator" content="@renatahorvat" />
    
    <!-- Additional SEO -->
    <meta name="geo.region" content="HR" />
    <meta name="geo.country" content="Croatia" />
    <meta name="language" content="English" />
    
    <!-- Google Search Console Verification -->
    <meta name="google-site-verification" content="T1_sOgmyD20gtjDzmLD" />
    
    <!-- Lenis Smooth Scroll -->
    <script src="https://cdn.jsdelivr.net/gh/studio-freight/lenis@1.0.19/bundled/lenis.min.js"></script>
    
    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-CY6VB6BVJL"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());

      gtag('config', 'G-CY6VB6BVJL', {
        page_title: '{title}',
        page_location: '{canonical}',
        custom_map: {
          'custom_parameter_1': 'portfolio_visitor'
        }
      });

      // Track scroll depth
      let maxScroll = 0;
      window.addEventListener('scroll', function() {
        const scrollPercent = Math.round((window.scrollY / (document.body.scrollHeight - window.innerHeight)) * 100);
        if (scrollPercent > maxScroll && scrollPercent % 25 === 0) {
          maxScroll = scrollPercent;
          gtag('event', 'scroll_depth', {
            scroll_percentage: scrollPercent,
            page_title: '{title}'
          });
        }
      });

      // Track time on page
      let startTime = Date.now();
      window.addEventListener('beforeunload', function() {
        const timeOnPage = Math.round((Date.now() - startTime) / 1000);
        gtag('event', 'time_on_page', {
          time_seconds: timeOnPage,
          page_title: '{title}'
        });
      });
    </script>
    
    <!-- Structured Data -->
    <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "Person",
      "name": "Renata Horvat",
      "jobTitle": "Designer & Digital Creator",
      "description": "Designer who speaks the language of science. I transform complex ideas into intuitive, visually captivating experiences.",
      "url": "https://renatahorvat.com",
      "image": "https://renatahorvat.com/images/renatahorvat.jpg",
      "sameAs": [
        "https://linkedin.com/in/renatahorvat",
        "https://twitter.com/renatahorvat"
      ],
      "address": {
        "@type": "PostalAddress",
        "addressCountry": "HR",
        "addressRegion": "Croatia"
      },
      "knowsAbout": [
        "Visual Design",
        "Science Communication", 
        "Educational Design",
        "Web Design",
        "Infographics",
        "Scientific Visualization",
        "Instructional Design",
        "E-learning Design",
        "Online Textbook Creation",
        "E-book Design",
        "Course Design",
        "Learning Experience Design",
        "Grafički dizajn",
        "Znanstvena komunikacija",
        "Edukacijski dizajn",
        "Web dizajn",
        "Infografike",
        "Vizualizacija podataka",
        "Instrukski dizajn",
        "E-učenje dizajn",
        "Online udžbenici",
        "E-knjige dizajn"
      ],
      "offers": {
        "@type": "Service",
        "name": "Design Services | Dizajn usluge",
        "description": "Visual design and digital creation services for educational and scientific content. Instructional design, e-learning, online textbooks, and e-book creation. Grafički dizajn, instrukski dizajn, e-učenje, online udžbenici i e-knjige."
      }
    }
    </script>
  </head>
  <body class="min-h-screen text-white antialiased" style="background-color: #15293f;">
    
    <slot />
    
    <!-- Scripts -->
    <script>
      // Smooth scroll initialization
      document.addEventListener('DOMContentLoaded', function() {
        // Lenis smooth scroll
        if (typeof Lenis !== 'undefined') {
          const lenis = new Lenis({
            duration: 1.2,
            easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),
            direction: 'vertical',
            gestureDirection: 'vertical',
            smooth: true,
            mouseMultiplier: 1,
            smoothTouch: false,
            touchMultiplier: 2,
            infinite: false,
          });

          function raf(time) {
            lenis.raf(time);
            requestAnimationFrame(raf);
          }
          requestAnimationFrame(raf);
        }

        // Reveal animations
        const observerOptions = {
          threshold: 0.1,
          rootMargin: '0px 0px -50px 0px'
        };

        const observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              entry.target.style.opacity = '1';
              entry.target.style.transform = 'translateY(0)';
            }
          });
        }, observerOptions);

        // Observe all elements with reveal class
        document.querySelectorAll('.reveal').forEach(el => {
          el.style.opacity = '0';
          el.style.transform = 'translateY(30px)';
          el.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
          observer.observe(el);
        });

        // Staggered reveal animations
        document.querySelectorAll('.reveal-stagger').forEach((container, index) => {
          const children = container.children;
          Array.from(children).forEach((child, childIndex) => {
            child.style.opacity = '0';
            child.style.transform = 'translateY(30px)';
            child.style.transition = `opacity 0.6s ease ${childIndex * 0.1}s, transform 0.6s ease ${childIndex * 0.1}s`;
          });
          
          const staggerObserver = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
              if (entry.isIntersecting) {
                Array.from(entry.target.children).forEach(child => {
                  child.style.opacity = '1';
                  child.style.transform = 'translateY(0)';
                });
              }
            });
          }, observerOptions);
          
          staggerObserver.observe(container);
        });
      });
    </script>
  </body>
</html>
